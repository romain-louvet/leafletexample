{
  "name": "Leafletexample",
  "tagline": "",
  "body": "<html>\r\n<head>\r\n<title>Webmapping with Leaflet and R</title>\r\n</head>\r\n\r\n<body>\r\n<b>Webmapping with Leaflet and R</b></h2> </br></br>\r\n\r\nThis is a crude example of a webpage containing an embed interactive map created with Leaflet in R.</br></br>\r\n\r\n<iframe width=\"800\" height=\"400\" src=\"file:///E:/Doctorat/5-Projets/GPS_tourism_tasmania/R_GpsTourTas/2-Outputs/maps/WebMappingLeaflet/56c11565.html\"></iframe>\r\n</br>\r\n<b>Credits:</b> Icons made by the <a href=\"http://www.unocha.org/\">UNOCHA</a>, <a href=\"http://www.elegantthemes.com\">elegantthemes.com</a>, \r\nand <a href=\"http://yanlu.de\">yanlu.de</a>, from <a href=\"www.flaticon.com\">flaticon.com</a>. Data: Uni. of Tasmania</br></br>\r\n\r\n<b>Library needed in R:</b> leaflet, htmlwidgets, + shiny</br></br> \r\n\r\n<b>With the interactive map, you can:</b> zoom in & out and move the display; click on markers;</br>\r\nadd a scalebar (if the dev. version from Github is installed);</br>\r\nadd a legend; change the marker's icon; change the colour of markers; add different base-maps;</br>\r\nadd several layers (markers, points, lines, polygons); changed displayed layers;</br>\r\ndisplay popup messages when click on markers; control the transpareny of the layers.</br></br>\r\n\r\nNB: if you want to add interactive data query, you'll need to use Shiny (then R needs to be installed on the web server).</br></br>\r\n\r\n<b>Using your own data</b> (shapefile, database with coordinates, small raster), you can easily use</br>\r\nLeaflet javascript library from R to export nice looking interactive maps. You can then embed</br>\r\nyour map in a webpage.</br></br>\r\n\r\n<b>More on this:</b> <a href=\"https://rstudio.github.io/leaflet/\">RStudio Doc - Leaflet for R</a>; \r\n<a href=\"http://amsantac.co/blog/en/r/2015/08/11/leaflet-R.html\">Tutorial - Web mapping with Leaflet and R</a>;</br> \r\n<a href=\"https://cran.r-project.org/web/packages/leaflet/leaflet.pdf\">CRAN Doc - Leaflet Package</a>; \r\n<a href=\"https://github.com/rstudio/leaflet\">GitHub Repository - Leaflet Dev</a>;</br>\r\n<a href=\"http://www.r-graph-gallery.com/portfolio/maps/\">Leaflet, examples of maps, on R graph gallery</a>; \r\n<a href=\"http://leafletjs.com/index.html\">Leaflet Website (documentation and tutorial)</a></br></br>\r\n\r\n<b>R code for this example:</b></br>\r\n<code>\r\ninstall.packages(\"devtools\r\ninstall.packages(\"sp\")\r\ninstall.packages(\"htmlwidgets\")\r\nlibrary(devtools)\r\ninstall_github(\"rstudio/leaflet\")\r\n\r\nlibrary(htmlwidgets)</br>\r\nlibrary(leaflet)</br>\r\nlibrary(sp) <b># for reprojecting</b></br>\r\n</br>\r\n<b>## PREPARING THE DATA (not relevant to Leaflet per se)##</br>\r\n# DATA: daily iphone GPS tracks of tourists visiting Tasmania</br>\r\n</br>\r\n# load my data (save as .Rdata)</b></br>\r\nmapdata <- \"E:/Doctorat/5-Projets/GPS_tourism_tasmania/R_GpsTourTas/\"</br>\r\nmapdata <- paste(mapdata,\"/2-Outputs/minmerge/GpsTouTas5minMERGE3.RData\",sep=\"\")</br>\r\nload(file=mapdata) <b># GpsTouTas loaded</b></br>\r\nGpsTouTas <- spTransform(GpsTouTas,CRS(\"+init=epsg:4326\")) # change to geo coordinates (vs proj coord)</br>\r\n</br>\r\n<b># select one id (one specific phone)</b></br>\r\nid <- \"56c11565\"</br>\r\n</br>\r\n<b># subset the data</b></br>\r\ndatamap <- data.frame(lon=GpsTouTas[GpsTouTas$uuid==id,]@coords[,1],</br>\r\n                      lat=GpsTouTas[GpsTouTas$uuid==id,]@coords[,2],</br>\r\n                      days=GpsTouTas@data$dycnt[GpsTouTas$uuid==id],</br>\r\n                      datim=GpsTouTas@data$datimNW[GpsTouTas$uuid==id],</br>\r\n                      weekday=GpsTouTas@data$wkday[GpsTouTas$uuid==id],</br>\r\n                      kmfromstart=round(GpsTouTas@data$mtrfrst[GpsTouTas$uuid==id]/1000,0),</br>\r\n                      kmday=round(GpsTouTas@data$mtrday[GpsTouTas$uuid==id]/1000,0),</br>\r\n                      cmlkmfromstart=round(GpsTouTas@data$mtrfrstcml[GpsTouTas$uuid==id]/1000,0),</br>\r\n                      cmlkmday=round(GpsTouTas@data$mtrdaycml[GpsTouTas$uuid==id]/1000,0)</br>\r\n)</br>\r\n</br>\r\n<b>## PARAMETERS FOR THE MAP##</br>\r\n# colour for each day</b></br>\r\ncolfunc <- colorRampPalette(c(\"green\", \"red\"))</br>\r\npal <- colfunc(nrow(datamap))</br>\r\nudays <- unique(datamap$days)</br>\r\npal <- colfunc(max(udays))</br>\r\n</br>\r\n<b># last stop, each day</b></br>\r\nlastlist <- sapply(udays,function(x) max(which(datamap$days==x)))</br>\r\n</br>\r\n<b># create new marker icons</b></br>\r\niconstops <-makeIcon(</br>\r\n  iconUrl = 'http://image.flaticon.com/icons/svg/27/27793.svg',</br>\r\n  iconWidth = 27, iconHeight = 27,</br>\r\n  iconAnchorX = 14, iconAnchorY = 0</br>\r\n)</br>\r\niconstart <-makeIcon(</br>\r\n  iconUrl = 'http://image.flaticon.com/icons/svg/64/64596.svg',</br>\r\n  iconWidth = 27, iconHeight = 27,</br>\r\n  iconAnchorX = 14, iconAnchorY = 0</br>\r\n)</br>\r\niconend <-makeIcon(</br>\r\n  iconUrl =  'http://image.flaticon.com/icons/svg/51/51846.svg',</br>\r\n  iconWidth = 27, iconHeight = 27,</br>\r\n  iconAnchorX = 14, iconAnchorY = 0</br>\r\n)</br>\r\n</br>\r\n<b># popup content for markers, by markers category</b></br>\r\ncontent <- paste(c(\"&lt;b&gt;Start&lt;/b&gt;\",</br>\r\n                   paste(\"&lt;b&gt;Stop \",1:(length(lastlist)-1),\"&lt;/b&gt;\"),</br>\r\n                   paste(\"&lt;b&gt;Stop \",ifelse(length(lastlist)==2,1,length(lastlist)),\"- final stop&lt;/b&gt;\")),\"&lt;/br&gt;\")</br>\r\n</br>\r\ncontent <- sapply(1:length(content),FUN=function(x) paste(content[x],</br>\r\n                                                          datamap$weekday[c(1,lastlist)][x],</br>\r\n                                                          datamap$datim[c(1,lastlist)][x],\"&lt;/br&gt;\"))</br>\r\ncontent[-1] <- sapply(1:(length(content)-1),FUN=function(x) paste(content[-1][x],\"Day(s) spent in Tasmania: \",</br>\r\n                                                                  datamap$day[c(lastlist)][x],\"&lt;/br&gt;\"))</br>\r\ncontent[-1] <- sapply(1:(length(content)-1),FUN=function(x) paste(content[-1][x],\"Straight line from start (km): \",</br>\r\n                                                                  datamap$kmfromstart[c(lastlist)][x],\"&lt;/br&gt;\"))</br>\r\ncontent[-1] <- sapply(1:(length(content)-1),FUN=function(x) paste(content[-1][x],\"Straight line from last stop (km): \",</br>\r\n                                                                  datamap$kmday[c(lastlist)][x],\"&lt;/br&gt;\"))</br>\r\ncontent[-1] <- sapply(1:(length(content)-1),FUN=function(x) paste(content[-1][x],\"Distance travelled so far (km): \",</br>\r\n                                                                  datamap$cmlkmfromstart[c(lastlist)][x],\"&lt;/br&gt;\"))</br>\r\ncontent[-1] <- sapply(1:(length(content)-1),FUN=function(x) paste(content[-1][x],\"Distance travelled from last stop (km): \",</br>\r\n                                                                  datamap$cmlkmday[c(lastlist)][x]))</br>\r\n</br>\r\n<b>## CREATE THE MAP</b></br>\r\nm <- leaflet(datamap) %>% addTiles(group=\"Map\")%>% <b># create the map with data and add basemaps</b></br>\r\n  addProviderTiles(provider=\"OpenTopoMap\",group = \"Topo\") %>% </br>\r\n  addProviderTiles(provider=\"Stamen.Toner\",group = \"Back & White\") %>%</br>\r\n  addProviderTiles(provider=\"Esri.WorldImagery\",group = \"Imagery\") %>% </br>\r\n  addPolylines(lng=datamap[,\"lon\"],lat=datamap[,\"lat\"],weight = 2, opacity = 0.5) %>% <b># add lines</b></br>\r\n  addCircles(color = ~pal[days],weight = 10) %>% # add circles, with color ramp</br>\r\n  addMarkers(lng=datamap[1,\"lon\"],lat=datamap[1,\"lat\"], <b># add markers, with categories</b></br>\r\n             popup = content[1],icon =iconstart) %>%</br>\r\n  addMarkers(lng=datamap[nrow(datamap),\"lon\"],lat=datamap[nrow(datamap),\"lat\"],</br>\r\n             popup = content[length(content)],icon =iconend)%>%</br>\r\n  addLegend(\"bottomright\", colors = pal[udays], values = udays, <b># add legend</b></br>\r\n            title = \"Days\",labels=c(1:max(udays))[udays], opacity = 1</br>\r\n  ) %>% addScaleBar(position = c(\"bottomleft\"),options = list(maxWidth=200,metric=TRUE,imperial=TRUE)) %>% <b># add scale bar</b></br>\r\n  addLayersControl(baseGroups = c(\"Map\",\"Topo\",\"Back & White\",\"Imagery\"),</br>\r\n                   overlayGroups = c(\"Lines\", \"Points\",\"Start\",\"Night stops\",\"End\"),</br>\r\n                   options = layersControlOptions(collapsed = FALSE)) <b># add layer display control</b></br>\r\n</br>\r\n<b>## print the map in R</b></br>\r\nm</br>\r\n<b>## save as html file</b></br>\r\nsaveWidget(m, file=paste(id,\".html\",sep=\"\"))</br>\r\n</code>\r\n</body>",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}